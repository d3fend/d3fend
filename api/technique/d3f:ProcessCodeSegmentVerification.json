{
  "def_to_off": {
    "head": {
      "vars": [
        "query_def_tech_label",
        "top_def_tech_label",
        "def_tactic_label",
        "def_tactic_rel_label",
        "def_tech_label",
        "def_artifact_rel_label",
        "def_artifact_label",
        "off_artifact_label",
        "off_artifact_rel_label",
        "off_tech_label",
        "off_tech_id",
        "off_tech_parent_label",
        "off_tech_parent_is_toplevel",
        "off_tactic_rel_label",
        "off_tactic_label",
        "def_tactic",
        "def_tactic_rel",
        "tactic_def_tech",
        "def_tech",
        "def_artifact_rel",
        "def_artifact",
        "off_artifact",
        "off_artifact_rel",
        "off_tech",
        "off_tech_parent",
        "off_tactic_rel",
        "off_tactic"
      ]
    },
    "results": {
      "bindings": [
        {
          "query_def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "top_def_tech_label": {
            "type": "literal",
            "value": "Process Analysis"
          },
          "def_tactic_label": {
            "type": "literal",
            "value": "Detect"
          },
          "def_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "def_artifact_rel_label": {
            "type": "literal",
            "value": "verifies"
          },
          "def_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_rel_label": {
            "type": "literal",
            "value": "may-modify"
          },
          "off_tech_label": {
            "type": "literal",
            "value": "Credential API Hooking"
          },
          "off_tech_id": {
            "type": "literal",
            "value": "T1056.004"
          },
          "off_tech_parent_label": {
            "type": "literal",
            "value": "Input Capture"
          },
          "off_tech_parent_is_toplevel": {
            "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
            "type": "literal",
            "value": "false"
          },
          "off_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "off_tactic_label": {
            "type": "literal",
            "value": "Collection"
          },
          "def_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
          },
          "def_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "def_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
          },
          "def_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
          },
          "def_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#may-modify"
          },
          "off_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1056.004"
          },
          "off_tech_parent": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1056"
          },
          "off_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "off_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Collection"
          }
        },
        {
          "query_def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "top_def_tech_label": {
            "type": "literal",
            "value": "Process Analysis"
          },
          "def_tactic_label": {
            "type": "literal",
            "value": "Detect"
          },
          "def_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "def_artifact_rel_label": {
            "type": "literal",
            "value": "verifies"
          },
          "def_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_rel_label": {
            "type": "literal",
            "value": "may-modify"
          },
          "off_tech_label": {
            "type": "literal",
            "value": "Exploitation for Credential Access"
          },
          "off_tech_id": {
            "type": "literal",
            "value": "T1212"
          },
          "off_tech_parent_label": {
            "type": "literal",
            "value": "Credential Access Technique"
          },
          "off_tech_parent_is_toplevel": {
            "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
            "type": "literal",
            "value": "true"
          },
          "off_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "off_tactic_label": {
            "type": "literal",
            "value": "Credential Access"
          },
          "def_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
          },
          "def_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "def_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
          },
          "def_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
          },
          "def_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#may-modify"
          },
          "off_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1212"
          },
          "off_tech_parent": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#CredentialAccessTechnique"
          },
          "off_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "off_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#CredentialAccess"
          }
        },
        {
          "query_def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "top_def_tech_label": {
            "type": "literal",
            "value": "Process Analysis"
          },
          "def_tactic_label": {
            "type": "literal",
            "value": "Detect"
          },
          "def_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "def_artifact_rel_label": {
            "type": "literal",
            "value": "verifies"
          },
          "def_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_rel_label": {
            "type": "literal",
            "value": "may-modify"
          },
          "off_tech_label": {
            "type": "literal",
            "value": "Credential API Hooking"
          },
          "off_tech_id": {
            "type": "literal",
            "value": "T1056.004"
          },
          "off_tech_parent_label": {
            "type": "literal",
            "value": "Input Capture"
          },
          "off_tech_parent_is_toplevel": {
            "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
            "type": "literal",
            "value": "false"
          },
          "off_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "off_tactic_label": {
            "type": "literal",
            "value": "Credential Access"
          },
          "def_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
          },
          "def_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "def_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
          },
          "def_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
          },
          "def_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#may-modify"
          },
          "off_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1056.004"
          },
          "off_tech_parent": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1056"
          },
          "off_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "off_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#CredentialAccess"
          }
        },
        {
          "query_def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "top_def_tech_label": {
            "type": "literal",
            "value": "Process Analysis"
          },
          "def_tactic_label": {
            "type": "literal",
            "value": "Detect"
          },
          "def_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "def_artifact_rel_label": {
            "type": "literal",
            "value": "verifies"
          },
          "def_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_rel_label": {
            "type": "literal",
            "value": "may-modify"
          },
          "off_tech_label": {
            "type": "literal",
            "value": "Exploitation for Defense Evasion"
          },
          "off_tech_id": {
            "type": "literal",
            "value": "T1211"
          },
          "off_tech_parent_label": {
            "type": "literal",
            "value": "Defense Evasion Technique"
          },
          "off_tech_parent_is_toplevel": {
            "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
            "type": "literal",
            "value": "true"
          },
          "off_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "off_tactic_label": {
            "type": "literal",
            "value": "Defense Evasion"
          },
          "def_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
          },
          "def_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "def_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
          },
          "def_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
          },
          "def_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#may-modify"
          },
          "off_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1211"
          },
          "off_tech_parent": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#DefenseEvasionTechnique"
          },
          "off_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "off_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#DefenseEvasion"
          }
        },
        {
          "query_def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "top_def_tech_label": {
            "type": "literal",
            "value": "Process Analysis"
          },
          "def_tactic_label": {
            "type": "literal",
            "value": "Detect"
          },
          "def_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "def_artifact_rel_label": {
            "type": "literal",
            "value": "verifies"
          },
          "def_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_rel_label": {
            "type": "literal",
            "value": "modifies"
          },
          "off_tech_label": {
            "type": "literal",
            "value": "Process Hollowing"
          },
          "off_tech_id": {
            "type": "literal",
            "value": "T1055.012"
          },
          "off_tech_parent_label": {
            "type": "literal",
            "value": "Process Injection"
          },
          "off_tech_parent_is_toplevel": {
            "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
            "type": "literal",
            "value": "false"
          },
          "off_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "off_tactic_label": {
            "type": "literal",
            "value": "Defense Evasion"
          },
          "def_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
          },
          "def_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "def_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
          },
          "def_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
          },
          "def_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"
          },
          "off_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1055.012"
          },
          "off_tech_parent": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1055"
          },
          "off_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "off_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#DefenseEvasion"
          }
        },
        {
          "query_def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "top_def_tech_label": {
            "type": "literal",
            "value": "Process Analysis"
          },
          "def_tactic_label": {
            "type": "literal",
            "value": "Detect"
          },
          "def_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "def_artifact_rel_label": {
            "type": "literal",
            "value": "verifies"
          },
          "def_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_rel_label": {
            "type": "literal",
            "value": "modifies"
          },
          "off_tech_label": {
            "type": "literal",
            "value": "Exploitation for Client Execution"
          },
          "off_tech_id": {
            "type": "literal",
            "value": "T1203"
          },
          "off_tech_parent_label": {
            "type": "literal",
            "value": "Execution Technique"
          },
          "off_tech_parent_is_toplevel": {
            "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
            "type": "literal",
            "value": "true"
          },
          "off_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "off_tactic_label": {
            "type": "literal",
            "value": "Execution"
          },
          "def_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
          },
          "def_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "def_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
          },
          "def_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
          },
          "def_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"
          },
          "off_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1203"
          },
          "off_tech_parent": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ExecutionTechnique"
          },
          "off_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "off_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Execution"
          }
        },
        {
          "query_def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "top_def_tech_label": {
            "type": "literal",
            "value": "Process Analysis"
          },
          "def_tactic_label": {
            "type": "literal",
            "value": "Detect"
          },
          "def_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "def_artifact_rel_label": {
            "type": "literal",
            "value": "verifies"
          },
          "def_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_rel_label": {
            "type": "literal",
            "value": "may-modify"
          },
          "off_tech_label": {
            "type": "literal",
            "value": "Exploitation of Remote Services"
          },
          "off_tech_id": {
            "type": "literal",
            "value": "T1210"
          },
          "off_tech_parent_label": {
            "type": "literal",
            "value": "Lateral Movement Technique"
          },
          "off_tech_parent_is_toplevel": {
            "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
            "type": "literal",
            "value": "true"
          },
          "off_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "off_tactic_label": {
            "type": "literal",
            "value": "Lateral Movement"
          },
          "def_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
          },
          "def_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "def_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
          },
          "def_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
          },
          "def_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#may-modify"
          },
          "off_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1210"
          },
          "off_tech_parent": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#LateralMovementTechnique"
          },
          "off_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "off_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#LateralMovement"
          }
        },
        {
          "query_def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "top_def_tech_label": {
            "type": "literal",
            "value": "Process Analysis"
          },
          "def_tactic_label": {
            "type": "literal",
            "value": "Detect"
          },
          "def_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "def_artifact_rel_label": {
            "type": "literal",
            "value": "verifies"
          },
          "def_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_rel_label": {
            "type": "literal",
            "value": "modifies"
          },
          "off_tech_label": {
            "type": "literal",
            "value": "Exploitation for Privilege Escalation"
          },
          "off_tech_id": {
            "type": "literal",
            "value": "T1068"
          },
          "off_tech_parent_label": {
            "type": "literal",
            "value": "Privilege Escalation Technique"
          },
          "off_tech_parent_is_toplevel": {
            "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
            "type": "literal",
            "value": "true"
          },
          "off_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "off_tactic_label": {
            "type": "literal",
            "value": "Privilege Escalation"
          },
          "def_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
          },
          "def_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "def_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
          },
          "def_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
          },
          "def_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"
          },
          "off_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1068"
          },
          "off_tech_parent": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#PrivilegeEscalationTechnique"
          },
          "off_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "off_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#PrivilegeEscalation"
          }
        },
        {
          "query_def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "top_def_tech_label": {
            "type": "literal",
            "value": "Process Analysis"
          },
          "def_tactic_label": {
            "type": "literal",
            "value": "Detect"
          },
          "def_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "def_artifact_rel_label": {
            "type": "literal",
            "value": "verifies"
          },
          "def_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "off_artifact_rel_label": {
            "type": "literal",
            "value": "modifies"
          },
          "off_tech_label": {
            "type": "literal",
            "value": "Process Hollowing"
          },
          "off_tech_id": {
            "type": "literal",
            "value": "T1055.012"
          },
          "off_tech_parent_label": {
            "type": "literal",
            "value": "Process Injection"
          },
          "off_tech_parent_is_toplevel": {
            "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
            "type": "literal",
            "value": "false"
          },
          "off_tactic_rel_label": {
            "type": "literal",
            "value": "enables"
          },
          "off_tactic_label": {
            "type": "literal",
            "value": "Privilege Escalation"
          },
          "def_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
          },
          "def_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "def_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
          },
          "def_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
          },
          "def_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          },
          "off_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"
          },
          "off_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1055.012"
          },
          "off_tech_parent": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1055"
          },
          "off_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "off_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#PrivilegeEscalation"
          }
        }
      ]
    }
  },
  "description": {
    "@context": {
      "d3f": "http://d3fend.mitre.org/ontologies/d3fend.owl#",
      "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
      "skos": "http://www.w3.org/2004/02/skos/core#",
      "owl": "http://www.w3.org/2002/07/owl#"
    },
    "@graph": [
      {
        "@id": "d3f:ProcessCodeSegmentVerification",
        "@type": [
          "d3f:ProcessAnalysis",
          "owl:NamedIndividual",
          "owl:Class"
        ],
        "d3f:d3fend-id": "D3-PCSV",
        "d3f:definition": "Comparing the \"text\" or \"code\" memory segments to a source of truth.",
        "d3f:kb-article": "## How it works\nA process code segment is an executable portion of computer memory allocated to a particular process. Process Code Segment Verification implements verification to compare a process code segment to some expected value.\n\n### Verification logic\nVerification can occur during application startup, or continuously during execution. The logic which verifies the process code may be separate in a third-party process, embedded in the application itself at compile time, or dynamically linked at runtime.\n\n### System of record\nExamples of systems of record:\n\n * On-disk application binary files or checksums\n * Remotely stored binary data or checksums\n * Embedded binary data or checksums\n\n### Post Verification Actions\nIf the verification function determines a process code segment may have been altered, a capability may invoke Eviction techniques  as **Process Termination** to end the current process, or **Executable Blacklisting** to prevent the executable from launching in the future.\n\n## Considerations\n\n### False positives\n\nFalse positives commonly occur in the case that the layout of code in the process segment is legitimately modified:\n\n*  Operating system features or third-party security software may modify the layout of process code, for example in the defensive technique **Segment Address Offset Randomization**, or in the case that a module is rebased.  In both of these cases, the alteration occurs before the code is fully loaded into memory, and it would be possible to avoid the false positive by securely feeding this constant offset and any relocation data into the verification logic.\n\n* Process code segments may be written to modify themselves or other process code segments; however, this goes against widely-accepted current practices in software development.\n\n### False negatives\n\nFalse negatives can occur via alteration of the verification logic or source of truth, or insufficient verification logic.\n\n* Verification techniques which are executed only locally may be defeated by altering the local verification logic.\n\n* Verification that is run only on a recurring basis could be evaded if the malicious alteration is completed before verification is run.\n\n* Verification that requests an operation to be performed on a subset of the code segment could be evaded by performing that operation on a copy of the relevant bytes of the code segment.\n\n* Verification based on a system of record that can be altered may fail if that system of record is modifiable by a malicious user.",
        "d3f:kb-reference": [
          {
            "@id": "d3f:Reference-Anti-tamperSystemWithSelf-adjustingGuards_ARXANTECHNOLOGIESInc"
          },
          {
            "@id": "d3f:Reference-GuardsForApplicationInSoftwareTamperproofing_PurdueResearchFoundation"
          },
          {
            "@id": "d3f:Reference-SystemAndMethodForDetectingMalwareInjectedIntoMemoryOfAComputingDevice_EndgameInc"
          },
          {
            "@id": "d3f:Reference-SystemAndMethodForValidatingIn-memoryIntegrityOfExecutableFilesToIdentifyMaliciousActivity_EndgameInc"
          },
          {
            "@id": "d3f:Reference-TamperProofMutatingSoftware_ARXANTECHNOLOGIESInc"
          },
          {
            "@id": "d3f:Reference-ThreatDetectionThroughTheAccumulatedDetectionOfThreatCharacteristics_SophosLtd"
          }
        ],
        "d3f:verifies": {
          "@id": "d3f:ProcessCodeSegment"
        },
        "rdfs:label": "Process Code Segment Verification",
        "rdfs:subClassOf": {
          "@id": "d3f:ProcessAnalysis"
        }
      }
    ]
  },
  "digital_artifacts": {
    "head": {
      "vars": [
        "query_def_tech_label",
        "top_def_tech_label",
        "def_tech_label",
        "def_artifact_rel_label",
        "def_artifact_label",
        "def_tactic",
        "def_tactic_rel",
        "def_tech",
        "def_artifact_rel",
        "def_artifact"
      ]
    },
    "results": {
      "bindings": [
        {
          "query_def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "top_def_tech_label": {
            "type": "literal",
            "value": "Process Analysis"
          },
          "def_tech_label": {
            "type": "literal",
            "value": "Process Code Segment Verification"
          },
          "def_artifact_rel_label": {
            "type": "literal",
            "value": "verifies"
          },
          "def_artifact_label": {
            "type": "literal",
            "value": "Process Code Segment"
          },
          "def_tactic": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
          },
          "def_tactic_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
          },
          "def_tech": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
          },
          "def_artifact_rel": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
          },
          "def_artifact": {
            "type": "uri",
            "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
          }
        }
      ]
    }
  },
  "references": {
    "@context": {
      "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
      "d3f": "http://d3fend.mitre.org/ontologies/d3fend.owl#"
    },
    "@graph": [
      {
        "@id": "d3f:Reference-Anti-tamperSystemWithSelf-adjustingGuards_ARXANTECHNOLOGIESInc",
        "@type": [
          "d3f:PatentReference",
          "http://www.w3.org/2002/07/owl#NamedIndividual"
        ],
        "d3f:has-link": {
          "@type": "http://www.w3.org/2001/XMLSchema#anyURI",
          "@value": "https://patents.google.com/patent/US20150052603A1"
        },
        "d3f:kb-abstract": "An anti-tamper system is disclosed that includes self-adjusting guards inserted in software. Self-adjusting guards include invocation criteria and guard function. During run-time, each time the self-adjusting guard is invoked, the invocation criteria is evaluated and the guard function is only executed if the invocation criteria is satisfied. The invocation criteria can be static or dynamic, satisfied randomly with fixed or varying probability, a monotonically or exponentially decreasing function or most any other type of function. The invocation criteria can be satisfied based on elapsed inter-guard invocation time (time since last guard function execution), target inter-guard invocation time, and/or guard execution time. A method is disclosed of inserting self-adjusting guards into software, and executing the software. Evaluating the invocation criteria can include adjusting the invocation criteria when satisfied. The self-adjusting guards can be inserted into the software at a source or object code level.",
        "d3f:kb-author": "Kevin Dale Morgan",
        "d3f:kb-mitre-analysis": "",
        "d3f:kb-organization": "ARXAN TECHNOLOGIES Inc",
        "d3f:kb-reference-of": {
          "@id": "d3f:ProcessCodeSegmentVerification"
        },
        "d3f:kb-reference-title": "Anti-tamper system with self-adjusting guards",
        "d3f:reference-type-label": "Patent",
        "rdfs:label": "Reference - Anti-tamper system with self-adjusting guards - ARXAN TECHNOLOGIES Inc"
      },
      {
        "@id": "d3f:Reference-GuardsForApplicationInSoftwareTamperproofing_PurdueResearchFoundation",
        "@type": [
          "d3f:PatentReference",
          "http://www.w3.org/2002/07/owl#NamedIndividual"
        ],
        "d3f:has-link": {
          "@type": "http://www.w3.org/2001/XMLSchema#anyURI",
          "@value": "https://patents.google.com/patent/US7287166B1/en?oq=US-7287166-B1"
        },
        "d3f:kb-abstract": "A method of protecting a software program from unauthorized modification, and a system for practicing the method. The method utilizes self-protecting software code. Armed internally with self-defensive mechanisms, a self-protecting software program is tamper-resistant. Whenever its integrity is compromised, a self-protecting software program may become unusable due to software program crashes or other errors, or may generate subtle errors that do not immediately result render the program unusable but still result in incorrect software program execution. A self-protecting software program also may be able to repair itself to restore the integrity of its damaged code. The system comprises a computer program for automatically adding self-protection features to a software program.",
        "d3f:kb-author": "Hoi Chang; Mikhail J. Atallah; John R. Rice",
        "d3f:kb-mitre-analysis": "",
        "d3f:kb-organization": "Purdue Research Foundation",
        "d3f:kb-reference-of": {
          "@id": "d3f:ProcessCodeSegmentVerification"
        },
        "d3f:kb-reference-title": "Guards for application in software tamperproofing",
        "d3f:reference-type-label": "Patent",
        "rdfs:label": "Reference - Guards for application in software tamperproofing - Purdue Research Foundation"
      },
      {
        "@id": "d3f:Reference-SystemAndMethodForDetectingMalwareInjectedIntoMemoryOfAComputingDevice_EndgameInc",
        "@type": [
          "d3f:PatentReference",
          "http://www.w3.org/2002/07/owl#NamedIndividual"
        ],
        "d3f:has-link": {
          "@type": "http://www.w3.org/2001/XMLSchema#anyURI",
          "@value": "https://patents.google.com/patent/US20190018958A1/en?oq=US20190018958-A1"
        },
        "d3f:kb-abstract": "In the embodiments described herein, a malicious code detection module identifies potentially malicious instructions in memory of a computing device. The malicious code detection module examines the call stack for each thread running within the operating system of the computing device. Within each call stack, the malicious code detection module identifies the originating module for each stack frame and determines whether the originating module is backed by an image on disk. If an originating module is not backed by an image on disk, the thread containing that originating module is flagged as potentially malicious, execution of the thread optionally is suspended, and an alert is generated for the user or administrator.",
        "d3f:kb-author": "Joseph W. Desimone",
        "d3f:kb-mitre-analysis": "",
        "d3f:kb-organization": "Endgame Inc",
        "d3f:kb-reference-of": {
          "@id": "d3f:ProcessCodeSegmentVerification"
        },
        "d3f:kb-reference-title": "System and method for detecting malware injected into memory of a computing device",
        "d3f:reference-type-label": "Patent",
        "rdfs:label": "Reference - System and method for detecting malware injected into memory of a computing device - Endgame Inc"
      },
      {
        "@id": "d3f:Reference-SystemAndMethodForValidatingIn-memoryIntegrityOfExecutableFilesToIdentifyMaliciousActivity_EndgameInc",
        "@type": [
          "d3f:PatentReference",
          "http://www.w3.org/2002/07/owl#NamedIndividual"
        ],
        "d3f:has-link": {
          "@type": "http://www.w3.org/2001/XMLSchema#anyURI",
          "@value": "https://patents.google.com/patent/US20190018962A1/en?oq=15648887"
        },
        "d3f:kb-abstract": "In the embodiments described herein, a malicious code detection module identifies potentially malicious instructions in volatile memory of a computing device before the instructions are executed. The malicious code detection module identifies an executable file, such as an .exe file, in memory, validates one or more components of the executable file against the same file stored in non-volatile storage, and issues an alert if the validation fails.",
        "d3f:kb-author": "Joseph W. Desimone",
        "d3f:kb-mitre-analysis": "",
        "d3f:kb-organization": "Endgame Inc",
        "d3f:kb-reference-of": {
          "@id": "d3f:ProcessCodeSegmentVerification"
        },
        "d3f:kb-reference-title": "System and method for validating in-memory integrity of executable files to identify malicious activity",
        "d3f:reference-type-label": "Patent",
        "rdfs:label": "Reference - System and method for validating in-memory integrity of executable files to identify malicious activity - Endgame Inc"
      },
      {
        "@id": "d3f:Reference-TamperProofMutatingSoftware_ARXANTECHNOLOGIESInc",
        "@type": [
          "d3f:PatentReference",
          "http://www.w3.org/2002/07/owl#NamedIndividual"
        ],
        "d3f:has-link": {
          "@type": "http://www.w3.org/2001/XMLSchema#anyURI",
          "@value": "https://patents.google.com/patent/US9262600B2/en?oq=US9262600B2"
        },
        "d3f:kb-abstract": "System and method is disclosed for protecting client software running on a client computer from tampering using a secure server. Prior to or independent of executing the client software, the system integrates self-protection into the client software; removes functions from the client software for execution on the server; develops client software self-protection updates; and periodically distributes the updates. During execution of the client software, the system receives an initial request from the client computer for execution of the removed function; verifies the initial request; and cooperates with the client computer in execution of the client software if verification is successful. If verification is unsuccessful, the system can attempt to update the client software on the client computer; and require a new initial request. Client software can be updated on occurrence of a triggering event. Communications can be encrypted, and the encryption updated. Authenticating checksums can be used for verification.",
        "d3f:kb-author": "Kevin Dale Morgan",
        "d3f:kb-mitre-analysis": "",
        "d3f:kb-organization": "ARXAN TECHNOLOGIES Inc",
        "d3f:kb-reference-of": {
          "@id": "d3f:ProcessCodeSegmentVerification"
        },
        "d3f:kb-reference-title": "Tamper proof mutating software",
        "d3f:reference-type-label": "Patent",
        "rdfs:label": "Reference - Tamper proof mutating software - ARXAN TECHNOLOGIES Inc"
      },
      {
        "@id": "d3f:Reference-ThreatDetectionThroughTheAccumulatedDetectionOfThreatCharacteristics_SophosLtd",
        "@type": [
          "d3f:PatentReference",
          "http://www.w3.org/2002/07/owl#NamedIndividual"
        ],
        "d3f:has-link": {
          "@type": "http://www.w3.org/2001/XMLSchema#anyURI",
          "@value": "https://patents.google.com/patent/US9104864B2/en?oq=US-9104864-B2"
        },
        "d3f:kb-abstract": "Embodiments of the present disclosure provide for improved capabilities in the detection of malware, where malware threats are detected through the accumulated identification of threat characteristics for targeted computer objects. Methods and systems include dynamic threat detection providing a first database that correlates a plurality of threat characteristics to a threat, wherein a presence of the plurality of the threat characteristics confirms a presence of the threat; detecting a change event in a computer run-time process; testing the change event for a presence of one or more of the plurality of characteristics upon detection of the change event; storing a detection of one of the plurality of characteristics in a second database that accumulates detected characteristics for the computer run-time process; and identifying the threat when each one of the plurality of characteristics appears in the second database.",
        "d3f:kb-author": "Clifford Penton; Irene Michlin",
        "d3f:kb-mitre-analysis": "",
        "d3f:kb-organization": "Sophos Ltd",
        "d3f:kb-reference-of": {
          "@id": "d3f:ProcessCodeSegmentVerification"
        },
        "d3f:kb-reference-title": "Threat detection through the accumulated detection of threat characteristics",
        "d3f:reference-type-label": "Patent",
        "rdfs:label": "Reference - Threat detection through the accumulated detection of threat characteristics - Sophos Ltd"
      }
    ]
  },
  "references_meta": {
    "Patent": 6
  },
  "subtechniques": {
    "@context": {
      "d3f": "http://d3fend.mitre.org/ontologies/d3fend.owl#",
      "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
      "skos": "http://www.w3.org/2004/02/skos/core#",
      "owl": "http://www.w3.org/2002/07/owl#"
    },
    "@graph": []
  },
  "related_offensive_matrix": {
    "Collection": [
      [
        "Input Capture",
        [
          {
            "query_def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "top_def_tech_label": {
              "type": "literal",
              "value": "Process Analysis"
            },
            "def_tactic_label": {
              "type": "literal",
              "value": "Detect"
            },
            "def_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "def_artifact_rel_label": {
              "type": "literal",
              "value": "verifies"
            },
            "def_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_rel_label": {
              "type": "literal",
              "value": "may-modify"
            },
            "off_tech_label": {
              "type": "literal",
              "value": "Credential API Hooking"
            },
            "off_tech_id": {
              "type": "literal",
              "value": "T1056.004"
            },
            "off_tech_parent_label": {
              "type": "literal",
              "value": "Input Capture"
            },
            "off_tech_parent_is_toplevel": {
              "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
              "type": "literal",
              "value": "false"
            },
            "off_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "off_tactic_label": {
              "type": "literal",
              "value": "Collection"
            },
            "def_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
            },
            "def_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "def_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
            },
            "def_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
            },
            "def_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#may-modify"
            },
            "off_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1056.004"
            },
            "off_tech_parent": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1056"
            },
            "off_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "off_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Collection"
            }
          }
        ]
      ]
    ],
    "Credential Access": [
      [
        "Exploitation for Credential Access",
        [
          {
            "query_def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "top_def_tech_label": {
              "type": "literal",
              "value": "Process Analysis"
            },
            "def_tactic_label": {
              "type": "literal",
              "value": "Detect"
            },
            "def_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "def_artifact_rel_label": {
              "type": "literal",
              "value": "verifies"
            },
            "def_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_rel_label": {
              "type": "literal",
              "value": "may-modify"
            },
            "off_tech_label": {
              "type": "literal",
              "value": "Exploitation for Credential Access"
            },
            "off_tech_id": {
              "type": "literal",
              "value": "T1212"
            },
            "off_tech_parent_label": {
              "type": "literal",
              "value": "Credential Access Technique"
            },
            "off_tech_parent_is_toplevel": {
              "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
              "type": "literal",
              "value": "true"
            },
            "off_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "off_tactic_label": {
              "type": "literal",
              "value": "Credential Access"
            },
            "def_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
            },
            "def_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "def_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
            },
            "def_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
            },
            "def_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#may-modify"
            },
            "off_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1212"
            },
            "off_tech_parent": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#CredentialAccessTechnique"
            },
            "off_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "off_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#CredentialAccess"
            }
          }
        ]
      ],
      [
        "Input Capture",
        [
          {
            "query_def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "top_def_tech_label": {
              "type": "literal",
              "value": "Process Analysis"
            },
            "def_tactic_label": {
              "type": "literal",
              "value": "Detect"
            },
            "def_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "def_artifact_rel_label": {
              "type": "literal",
              "value": "verifies"
            },
            "def_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_rel_label": {
              "type": "literal",
              "value": "may-modify"
            },
            "off_tech_label": {
              "type": "literal",
              "value": "Credential API Hooking"
            },
            "off_tech_id": {
              "type": "literal",
              "value": "T1056.004"
            },
            "off_tech_parent_label": {
              "type": "literal",
              "value": "Input Capture"
            },
            "off_tech_parent_is_toplevel": {
              "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
              "type": "literal",
              "value": "false"
            },
            "off_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "off_tactic_label": {
              "type": "literal",
              "value": "Credential Access"
            },
            "def_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
            },
            "def_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "def_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
            },
            "def_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
            },
            "def_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#may-modify"
            },
            "off_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1056.004"
            },
            "off_tech_parent": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1056"
            },
            "off_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "off_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#CredentialAccess"
            }
          }
        ]
      ]
    ],
    "Defense Evasion": [
      [
        "Exploitation for Defense Evasion",
        [
          {
            "query_def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "top_def_tech_label": {
              "type": "literal",
              "value": "Process Analysis"
            },
            "def_tactic_label": {
              "type": "literal",
              "value": "Detect"
            },
            "def_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "def_artifact_rel_label": {
              "type": "literal",
              "value": "verifies"
            },
            "def_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_rel_label": {
              "type": "literal",
              "value": "may-modify"
            },
            "off_tech_label": {
              "type": "literal",
              "value": "Exploitation for Defense Evasion"
            },
            "off_tech_id": {
              "type": "literal",
              "value": "T1211"
            },
            "off_tech_parent_label": {
              "type": "literal",
              "value": "Defense Evasion Technique"
            },
            "off_tech_parent_is_toplevel": {
              "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
              "type": "literal",
              "value": "true"
            },
            "off_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "off_tactic_label": {
              "type": "literal",
              "value": "Defense Evasion"
            },
            "def_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
            },
            "def_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "def_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
            },
            "def_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
            },
            "def_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#may-modify"
            },
            "off_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1211"
            },
            "off_tech_parent": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#DefenseEvasionTechnique"
            },
            "off_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "off_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#DefenseEvasion"
            }
          }
        ]
      ],
      [
        "Process Injection",
        [
          {
            "query_def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "top_def_tech_label": {
              "type": "literal",
              "value": "Process Analysis"
            },
            "def_tactic_label": {
              "type": "literal",
              "value": "Detect"
            },
            "def_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "def_artifact_rel_label": {
              "type": "literal",
              "value": "verifies"
            },
            "def_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_rel_label": {
              "type": "literal",
              "value": "modifies"
            },
            "off_tech_label": {
              "type": "literal",
              "value": "Process Hollowing"
            },
            "off_tech_id": {
              "type": "literal",
              "value": "T1055.012"
            },
            "off_tech_parent_label": {
              "type": "literal",
              "value": "Process Injection"
            },
            "off_tech_parent_is_toplevel": {
              "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
              "type": "literal",
              "value": "false"
            },
            "off_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "off_tactic_label": {
              "type": "literal",
              "value": "Defense Evasion"
            },
            "def_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
            },
            "def_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "def_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
            },
            "def_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
            },
            "def_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"
            },
            "off_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1055.012"
            },
            "off_tech_parent": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1055"
            },
            "off_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "off_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#DefenseEvasion"
            }
          }
        ]
      ]
    ],
    "Execution": [
      [
        "Exploitation for Client Execution",
        [
          {
            "query_def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "top_def_tech_label": {
              "type": "literal",
              "value": "Process Analysis"
            },
            "def_tactic_label": {
              "type": "literal",
              "value": "Detect"
            },
            "def_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "def_artifact_rel_label": {
              "type": "literal",
              "value": "verifies"
            },
            "def_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_rel_label": {
              "type": "literal",
              "value": "modifies"
            },
            "off_tech_label": {
              "type": "literal",
              "value": "Exploitation for Client Execution"
            },
            "off_tech_id": {
              "type": "literal",
              "value": "T1203"
            },
            "off_tech_parent_label": {
              "type": "literal",
              "value": "Execution Technique"
            },
            "off_tech_parent_is_toplevel": {
              "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
              "type": "literal",
              "value": "true"
            },
            "off_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "off_tactic_label": {
              "type": "literal",
              "value": "Execution"
            },
            "def_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
            },
            "def_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "def_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
            },
            "def_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
            },
            "def_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"
            },
            "off_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1203"
            },
            "off_tech_parent": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ExecutionTechnique"
            },
            "off_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "off_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Execution"
            }
          }
        ]
      ]
    ],
    "Lateral Movement": [
      [
        "Exploitation of Remote Services",
        [
          {
            "query_def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "top_def_tech_label": {
              "type": "literal",
              "value": "Process Analysis"
            },
            "def_tactic_label": {
              "type": "literal",
              "value": "Detect"
            },
            "def_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "def_artifact_rel_label": {
              "type": "literal",
              "value": "verifies"
            },
            "def_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_rel_label": {
              "type": "literal",
              "value": "may-modify"
            },
            "off_tech_label": {
              "type": "literal",
              "value": "Exploitation of Remote Services"
            },
            "off_tech_id": {
              "type": "literal",
              "value": "T1210"
            },
            "off_tech_parent_label": {
              "type": "literal",
              "value": "Lateral Movement Technique"
            },
            "off_tech_parent_is_toplevel": {
              "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
              "type": "literal",
              "value": "true"
            },
            "off_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "off_tactic_label": {
              "type": "literal",
              "value": "Lateral Movement"
            },
            "def_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
            },
            "def_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "def_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
            },
            "def_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
            },
            "def_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#may-modify"
            },
            "off_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1210"
            },
            "off_tech_parent": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#LateralMovementTechnique"
            },
            "off_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "off_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#LateralMovement"
            }
          }
        ]
      ]
    ],
    "Privilege Escalation": [
      [
        "Exploitation for Privilege Escalation",
        [
          {
            "query_def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "top_def_tech_label": {
              "type": "literal",
              "value": "Process Analysis"
            },
            "def_tactic_label": {
              "type": "literal",
              "value": "Detect"
            },
            "def_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "def_artifact_rel_label": {
              "type": "literal",
              "value": "verifies"
            },
            "def_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_rel_label": {
              "type": "literal",
              "value": "modifies"
            },
            "off_tech_label": {
              "type": "literal",
              "value": "Exploitation for Privilege Escalation"
            },
            "off_tech_id": {
              "type": "literal",
              "value": "T1068"
            },
            "off_tech_parent_label": {
              "type": "literal",
              "value": "Privilege Escalation Technique"
            },
            "off_tech_parent_is_toplevel": {
              "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
              "type": "literal",
              "value": "true"
            },
            "off_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "off_tactic_label": {
              "type": "literal",
              "value": "Privilege Escalation"
            },
            "def_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
            },
            "def_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "def_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
            },
            "def_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
            },
            "def_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"
            },
            "off_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1068"
            },
            "off_tech_parent": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#PrivilegeEscalationTechnique"
            },
            "off_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "off_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#PrivilegeEscalation"
            }
          }
        ]
      ],
      [
        "Process Injection",
        [
          {
            "query_def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "top_def_tech_label": {
              "type": "literal",
              "value": "Process Analysis"
            },
            "def_tactic_label": {
              "type": "literal",
              "value": "Detect"
            },
            "def_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "def_tech_label": {
              "type": "literal",
              "value": "Process Code Segment Verification"
            },
            "def_artifact_rel_label": {
              "type": "literal",
              "value": "verifies"
            },
            "def_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_label": {
              "type": "literal",
              "value": "Process Code Segment"
            },
            "off_artifact_rel_label": {
              "type": "literal",
              "value": "modifies"
            },
            "off_tech_label": {
              "type": "literal",
              "value": "Process Hollowing"
            },
            "off_tech_id": {
              "type": "literal",
              "value": "T1055.012"
            },
            "off_tech_parent_label": {
              "type": "literal",
              "value": "Process Injection"
            },
            "off_tech_parent_is_toplevel": {
              "datatype": "http://www.w3.org/2001/XMLSchema#boolean",
              "type": "literal",
              "value": "false"
            },
            "off_tactic_rel_label": {
              "type": "literal",
              "value": "enables"
            },
            "off_tactic_label": {
              "type": "literal",
              "value": "Privilege Escalation"
            },
            "def_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"
            },
            "def_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "def_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification"
            },
            "def_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"
            },
            "def_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"
            },
            "off_artifact_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"
            },
            "off_tech": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1055.012"
            },
            "off_tech_parent": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#T1055"
            },
            "off_tactic_rel": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#enables"
            },
            "off_tactic": {
              "type": "uri",
              "value": "http://d3fend.mitre.org/ontologies/d3fend.owl#PrivilegeEscalation"
            }
          }
        ]
      ]
    ]
  }
}