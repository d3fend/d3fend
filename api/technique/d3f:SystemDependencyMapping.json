{"def_to_off":{"head":{"vars":["query_def_tech_label","top_def_tech_label","def_tactic_label","def_tactic_rel_label","def_tech_label","def_artifact_rel_label","def_artifact_label","off_artifact_label","off_artifact_rel_label","off_tech_label","off_tech_id","off_tech_parent_label","off_tech_parent_is_toplevel","off_tactic_rel_label","off_tactic_label","def_tactic","def_tactic_rel","tactic_def_tech","def_tech","def_artifact_rel","def_artifact","off_artifact","off_artifact_rel","off_tech","off_tech_parent","off_tactic_rel","off_tactic"]},"results":{"bindings":[]}},"description":{"@context":{"d3f":"http://d3fend.mitre.org/ontologies/d3fend.owl#","rdfs":"http://www.w3.org/2000/01/rdf-schema#","skos":"http://www.w3.org/2004/02/skos/core#","owl":"http://www.w3.org/2002/07/owl#"},"@graph":[{"@id":"d3f:SystemDependencyMapping","@type":["owl:NamedIndividual","d3f:SystemMapping","owl:Class"],"d3f:d3fend-id":"D3-SYSDM","d3f:definition":"System dependency mapping identifies and models the dependencies of system components on each other to carry out their function.","d3f:kb-article":"## How it works\nThe organization collects and models architectural information about the software, hardware, and products and maps the dependencies between systems, including each system's internal components and dependencies.\n\n## Considerations\n* Data exchanges identified in the network mapping efforts usually indicate such dependencies, but may not be part of the intended design.\n* Architectural design artifacts and SMEs may need to be consulted to determine if dependencies are intended or otherwise essential.\n* System depedency mapping can identify internal dependencies of standard and pre-built systems that should be incorporated into a complete system dependency model.\n* System dependencies for critical systems--those supporting critical organizational activities--should be prioritized for supply chain risk analysis.\n* System dependencies should identify the integral components of a given named system and their structure to form a system.\n* System dependencies with a given system may be fixed by a particular product's configuration, and leveraging external knowledge bases about dependencies available (e.g., from package managers) is essential.","d3f:kb-reference":[{"@id":"d3f:Reference-CatiaUAFPlugin"},{"@id":"d3f:Reference-SoftwareVulnerabilityGraphDatabase"},{"@id":"d3f:Reference-TivoliApplicationDependencyDiscoverManager7_3_0DependenciesBetweenResources"},{"@id":"d3f:Reference-UnifiedArchitectureFrameworkUAF"}],"d3f:maps":{"@id":"d3f:SystemDependency"},"rdfs:label":"System Dependency Mapping","rdfs:subClassOf":{"@id":"d3f:SystemMapping"}}]},"digital_artifacts":{"head":{"vars":["query_def_tech_label","top_def_tech_label","def_tech_label","def_artifact_rel_label","def_artifact_label","def_tactic","def_tactic_rel","def_tech","def_artifact_rel","def_artifact"]},"results":{"bindings":[{"query_def_tech_label":{"type":"literal","value":"System Dependency Mapping"},"top_def_tech_label":{"type":"literal","value":"System Mapping"},"def_tech_label":{"type":"literal","value":"System Dependency Mapping"},"def_artifact_rel_label":{"type":"literal","value":"maps"},"def_artifact_label":{"type":"literal","value":"System Dependency"},"def_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Model"},"def_tactic_rel":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"def_tech":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#SystemDependencyMapping"},"def_artifact_rel":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#maps"},"def_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#SystemDependency"}}]}},"references":{"@context":{"rdfs":"http://www.w3.org/2000/01/rdf-schema#","d3f":"http://d3fend.mitre.org/ontologies/d3fend.owl#"},"@graph":[{"@id":"d3f:Reference-CatiaUAFPlugin","@type":["d3f:InternetArticleReference","http://www.w3.org/2002/07/owl#NamedIndividual"],"d3f:has-link":{"@type":"http://www.w3.org/2001/XMLSchema#anyURI","@value":"https://www.3ds.com/products-services/catia/products/no-magic/addons/uaf-plugin/"},"d3f:kb-abstract":"MagicDraw offers the most robust standards compliant [Unified Architecture Framework (UAF)], DoDAF 2.0, MODAF 1.2, NAF 3, and NAF 4 via a UAF standardized solution. And what's more, No Magic fully supports all architectural framework products ensuring you achieve project results. No Magic also leads the industry in usability and interoprability, ensuring that you avoid unnecessary cost, schedule and performance risk.","d3f:kb-organization":"Dassault Systemes","d3f:kb-reference-of":[{"@id":"d3f:DataExchangeMapping"},{"@id":"d3f:OperationalActivityMapping"},{"@id":"d3f:OperationalDependencyMapping"},{"@id":"d3f:OrganizationMapping"},{"@id":"d3f:ServiceDependencyMapping"},{"@id":"d3f:SystemDependencyMapping"}],"d3f:kb-reference-title":"Catia UAF Plugin","d3f:reference-type-label":"Internet Article","rdfs:label":"Reference - Catia UAF Plugin"},{"@id":"d3f:Reference-SoftwareVulnerabilityGraphDatabase","@type":["d3f:PatentReference","http://www.w3.org/2002/07/owl#NamedIndividual"],"d3f:has-link":{"@type":"http://www.w3.org/2001/XMLSchema#anyURI","@value":"https://patents.google.com/patent/WO2020028535A1"},"d3f:kb-abstract":"To analyze open-source code at a large scale, a security domain graph language (\"GL\") has been created that functions as a vulnerability description language and facilitates program analysis queries. The SGL facilitates building and maintaining a graph database to catalogue vulnerabilities found in open-source components. This graphical database can be accessed via a database interface directly or accessed by an agent that interacts with the database interface. To build the graph database, a database interface processes an open-source component and creates graph structures which represent relationships present in the open-source component. The database interface transforms a vulnerability description into a canonical form based on a schema for the graph database and updates the database based on a determination of whether the vulnerability is a duplicate. This ensures quality and consistency of the vulnerability dataset maintained in the graph database.","d3f:kb-author":"Darius Tsien Wei FOO, Ming Yi ANG, Asankhaya Sharma, Jie Shun YEO","d3f:kb-organization":"Veracode, Inc.","d3f:kb-reference-of":[{"@id":"d3f:SystemDependencyMapping"},{"@id":"d3f:SystemVulnerabilityAssessment"},{"@id":"d3f:AssetVulnerabilityEnumeration"}],"d3f:kb-reference-title":"Software vulnerability graph database","d3f:reference-type-label":"Patent","rdfs:label":"Reference - Software vulnerability graph database"},{"@id":"d3f:Reference-TivoliApplicationDependencyDiscoverManager7_3_0DependenciesBetweenResources","@type":["d3f:UserManualReference","http://www.w3.org/2002/07/owl#NamedIndividual"],"d3f:has-link":{"@type":"http://www.w3.org/2001/XMLSchema#anyURI","@value":"https://www.ibm.com/docs/en/taddm/7.3.0?topic=model-dependencies-between-resources"},"d3f:kb-organization":"IBM","d3f:kb-reference-of":[{"@id":"d3f:DataExchangeMapping"},{"@id":"d3f:ServiceDependencyMapping"},{"@id":"d3f:SystemDependencyMapping"}],"d3f:kb-reference-title":"Tivoli Application Dependency Discovery Manager 7.3.0 - Dependencies between resources","d3f:reference-type-label":"User Manual","rdfs:label":"Reference - Tivoli Application Dependency Discovery Manager 7.3.0 - Dependencies between resources"},{"@id":"d3f:Reference-UnifiedArchitectureFrameworkUAF","@type":["d3f:SpecificationReference","http://www.w3.org/2002/07/owl#NamedIndividual"],"d3f:has-link":{"@type":"http://www.w3.org/2001/XMLSchema#anyURI","@value":"https://www.omg.org/spec/UAF/"},"d3f:kb-abstract":"UAF is an OMG standard that assists in development of architectural descriptions in commercial industry firms, federal government agencies and defense organizations. UAF has a variety of use cases from Enterprise and Mission architecting, to System of Systems (SoS) and Cyber-physical Systems engineering, as well as being an enabler for Digital Transformation efforts and for Department of Defense Architecture Framework (DoDAF) and NATO Architecture Framework (NAF) modeling. Architectural Descriptions in UAF are aligned with ISO/IEC/IEEE 42010:2011, Systems and software engineering -- Architecture description.","d3f:kb-organization":"OMG","d3f:kb-reference-of":[{"@id":"d3f:DataExchangeMapping"},{"@id":"d3f:OperationalActivityMapping"},{"@id":"d3f:OperationalDependencyMapping"},{"@id":"d3f:OrganizationMapping"},{"@id":"d3f:ServiceDependencyMapping"},{"@id":"d3f:SystemDependencyMapping"}],"d3f:kb-reference-title":"Unified Architecture Framework (UAF)","d3f:reference-type-label":"Specification","rdfs:label":"Reference - Unified Architecture Framework (UAF)"}]},"references_meta":{"Internet Article":1,"Patent":1,"User Manual":1,"Specification":1},"subtechniques":{"@context":{"d3f":"http://d3fend.mitre.org/ontologies/d3fend.owl#","rdfs":"http://www.w3.org/2000/01/rdf-schema#","skos":"http://www.w3.org/2004/02/skos/core#","owl":"http://www.w3.org/2002/07/owl#"},"@graph":[]},"related_offensive_matrix":{}}