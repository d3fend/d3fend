{"@context":{"rdfs":"http://www.w3.org/2000/01/rdf-schema#","owl":"http://www.w3.org/2002/07/owl#","d3f":"http://d3fend.mitre.org/ontologies/d3fend.owl#","skos":"http://www.w3.org/2004/02/skos/core#"},"@graph":[{"@id":"d3f:AllocateMemory","@type":["owl:NamedIndividual","owl:Class"],"d3f:creates":[{"@id":"d3f:MemoryBlock"}],"rdfs:label":["Allocate Memory"],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t111944"}]},{"@id":"d3f:AuthenticateUser","@type":["owl:NamedIndividual","owl:Class"],"d3f:authenticates":[{"@id":"d3f:UserAccount"}],"rdfs:label":["Authenticate User"],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t111566"}]},{"@id":"d3f:ConnectSocket","@type":["owl:NamedIndividual","owl:Class"],"d3f:connects":[{"@id":"d3f:Pipe"}],"d3f:definition":["The connect socket system call connects the socket to a target address."],"rdfs:label":["Connect Socket"],"rdfs:seeAlso":[{"@id":"https://man7.org/linux/man-pages/man2/connect.2.html"}],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t111444"}]},{"@id":"d3f:CopyToken","@type":["d3f:CopyToken","owl:NamedIndividual","owl:Class"],"d3f:copies":[{"@id":"d3f:AccessToken"}],"rdfs:label":["Copy Token"],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t111796"}]},{"@id":"d3f:CreateFile","@type":["owl:NamedIndividual","owl:Class"],"d3f:creates":[{"@id":"d3f:File"}],"d3f:definition":["System call to create a new file on a file system. Some operating systems implement this functionality as part of their d3f:OpenFile system call."],"rdfs:label":["Create File"],"rdfs:seeAlso":[{"@id":"https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfile2"},{"@id":"https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilea"},{"@id":"https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilew"},{"@id":"https://linux.die.net/man/2/creat"}],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t111866"}]},{"@id":"d3f:CreateProcess","@type":["owl:NamedIndividual","owl:Class"],"d3f:creates":[{"@id":"d3f:Process"}],"d3f:definition":["A process spawn refers to a function that loads and executes a new child process.The current process may wait for the child to terminate or may continue to execute asynchronously. Creating a new subprocess requires enough memory in which both the child process and the current program can execute. There is a family of spawn functions in DOS, inherited by Microsoft Windows. There is also a different family of spawn functions in an optional extension of the POSIX standards.  Fork-exec is another technique combining two Unix system calls, which can effect a process spawn."],"rdfs:label":["Create Process"],"rdfs:seeAlso":[{"@id":"http://dbpedia.org/resource/Fork%E2%80%93exec"},{"@id":"http://dbpedia.org/resource/Spawn_(computing)"},{"@id":"https://docs.microsoft.com/en-us/windows/win32/procthread/creating-processes"}],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t112188"}],"skos:altLabel":["Process Spawn"]},{"@id":"d3f:CreateSocket","@type":["owl:Class","owl:NamedIndividual"],"d3f:creates":[{"@id":"d3f:Pipe"}],"d3f:definition":["A create socket system call creates an endpoint for communication and returns a file descriptor that refers to that endpoint."],"rdfs:label":["Create Socket"],"rdfs:seeAlso":[{"@id":"https://www.man7.org/linux/man-pages/man2/socket.2.html"}],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t111874"}]},{"@id":"d3f:CreateThread","@type":["owl:NamedIndividual","owl:Class"],"d3f:creates":[{"@id":"d3f:Thread"}],"d3f:definition":["Threads are an execution model that exists independently from a language, as well as a parallel execution model. They enable a program to control multiple different flows of work that overlap in time."],"rdfs:label":["Create Thread"],"rdfs:seeAlso":[{"@id":"http://dbpedia.org/resource/POSIX_Threads"},{"@id":"https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createthread"}],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t111981"}]},{"@id":"d3f:FreeMemory","@type":["owl:NamedIndividual","owl:Class"],"d3f:deletes":[{"@id":"d3f:MemoryBlock"}],"rdfs:label":["Free Memory"],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t111903"}]},{"@id":"d3f:GetOpenSockets","@type":["owl:NamedIndividual","owl:Class"],"d3f:enumerates":[{"@id":"d3f:Pipe"}],"rdfs:label":["Get Open Sockets"],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t111747"}]},{"@id":"d3f:GetOpenWindows","@type":["owl:NamedIndividual","owl:Class"],"rdfs:label":["Get Open Windows"],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"}]},{"@id":"d3f:GetRunningProcesses","@type":["owl:NamedIndividual","owl:Class"],"rdfs:label":["Get Running Processes"],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"}]},{"@id":"d3f:GetScreenCapture","@type":["owl:NamedIndividual","owl:Class"],"rdfs:label":["Get Screen Capture"],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"}]},{"@id":"d3f:GetSystemConfigValue","@type":["owl:NamedIndividual","owl:Class"],"d3f:reads":[{"@id":"d3f:SystemConfigurationDatabaseRecord"}],"rdfs:hasSubClass":[{"@id":"d3f:GetSystemNetworkConfigValue"}],"rdfs:label":["Get System Config Value"],"rdfs:seeAlso":["https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regopenkeyexa"],"rdfs:subClassOf":[{"@id":"d3f:SystemConfigSystemCall"},{"@id":"_:t112219"}]},{"@id":"d3f:GetSystemNetworkConfigValue","@type":["owl:NamedIndividual","owl:Class"],"rdfs:label":["Get System Network Config Value"],"rdfs:subClassOf":[{"@id":"d3f:GetSystemConfigValue"}]},{"@id":"d3f:GetSystemTime","@type":["owl:NamedIndividual","owl:Class"],"d3f:definition":["A system call that gets the system time.  For POSIX.1 systems, time() invokes a call to get the system time."],"rdfs:label":["Get System Time"],"rdfs:seeAlso":[{"@id":"https://man7.org/linux/man-pages/man2/time.2.html"}],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"}]},{"@id":"d3f:ImpersonateUser","@type":["d3f:ImpersonateUser","owl:NamedIndividual","owl:Class"],"d3f:forges":[{"@id":"d3f:UserAccount"}],"rdfs:label":["Impersonate User"],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t111741"}]},{"@id":"d3f:LogonUser","@type":["owl:NamedIndividual","owl:Class"],"d3f:authenticates":[{"@id":"d3f:UserAccount"}],"rdfs:label":["Logon User"],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t111652"}]},{"@id":"d3f:MoveFile","@type":["owl:NamedIndividual","owl:Class"],"d3f:definition":["A system call to rename or move a file.  Linux's rename() is an example of this kind of system call."],"d3f:modifies":[{"@id":"d3f:FileSystemMetadata"}],"rdfs:label":["Move File"],"rdfs:seeAlso":[{"@id":"https://man7.org/linux/man-pages/man2/rename.2.html"}],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t112079"}],"skos:altLabel":["Rename File"]},{"@id":"d3f:OpenFile","@type":["owl:Class","owl:NamedIndividual"],"d3f:accesses":[{"@id":"d3f:File"}],"d3f:definition":["For most file systems, a program initializes access to a file in a file system using the open system call. This allocates resources associated to the file (the file descriptor), and returns a handle that the process will use to refer to that file. In some cases the open is performed by the first access. During the open, the filesystem may allocate memory for buffers, or it may wait until the first operation. Various other errors which may occur during the open include directory update failures, un-permitted multiple connections, media failures, communication link failures and device failures."],"rdfs:isDefinedBy":[{"@id":"http://dbpedia.org/resource/Open_(system_call)"}],"rdfs:label":["Open File"],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t111947"}]},{"@id":"d3f:ReadFile","@type":["owl:NamedIndividual","owl:Class"],"d3f:definition":["A program that needs to access data from a file stored in a file system uses the read system call. The file is identified by a file descriptor that is normally obtained from a previous call to open. This system call reads in data in bytes, the number of which is specified by the caller, from the file and stores then into a buffer supplied by the calling process."],"d3f:reads":[{"@id":"d3f:File"}],"rdfs:label":["Read File"],"rdfs:seeAlso":[{"@id":"http://dbpedia.org/resource/Read_(system_call)"}],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t112024"}]},{"@id":"d3f:SetSystemConfigValue","@type":["owl:NamedIndividual","owl:Class"],"d3f:modifies":[{"@id":"d3f:SystemConfigurationDatabaseRecord"}],"rdfs:label":["Set System Config Value"],"rdfs:seeAlso":["https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regsetvalueexa"],"rdfs:subClassOf":[{"@id":"d3f:SystemConfigSystemCall"},{"@id":"_:t111897"}]},{"@id":"d3f:SuspendProcess","@type":["owl:NamedIndividual","owl:Class"],"d3f:evicts":[{"@id":"d3f:Process"}],"rdfs:label":["Suspend Process"],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t111347"}]},{"@id":"d3f:SystemCall","@type":["owl:Class","owl:NamedIndividual"],"d3f:definition":["A system call is the programmatic way in which a computer program requests a service from the kernel of the operating system it is executed on. This may include hardware-related services (for example, accessing a hard disk drive), creation and execution of new processes, and communication with integral kernel services such as process scheduling. System calls provide an essential interface between a process and the operating system."],"d3f:executes":[{"@id":"d3f:Subroutine"}],"d3f:synonym":["API Monitoring"],"rdfs:hasSubClass":[{"@id":"d3f:CreateSocket"},{"@id":"d3f:CreateThread"},{"@id":"d3f:GetSystemTime"},{"@id":"d3f:ImpersonateUser"},{"@id":"d3f:AuthenticateUser"},{"@id":"d3f:ConnectSocket"},{"@id":"d3f:CopyToken"},{"@id":"d3f:CreateFile"},{"@id":"d3f:OpenFile"},{"@id":"d3f:ReadFile"},{"@id":"d3f:TerminateProcess"},{"@id":"d3f:TraceProcess"},{"@id":"d3f:LogonUser"},{"@id":"d3f:MoveFile"},{"@id":"d3f:CreateProcess"},{"@id":"d3f:WriteFile"},{"@id":"d3f:GetOpenWindows"},{"@id":"d3f:SuspendProcess"},{"@id":"d3f:AllocateMemory"},{"@id":"d3f:FreeMemory"},{"@id":"d3f:SystemConfigSystemCall"},{"@id":"d3f:GetOpenSockets"},{"@id":"d3f:GetRunningProcesses"},{"@id":"d3f:GetScreenCapture"}],"rdfs:isDefinedBy":[{"@id":"http://dbpedia.org/resource/System_call"}],"rdfs:label":["System Call"],"rdfs:subClassOf":[{"@id":"d3f:DigitalArtifact"},{"@id":"d3f:DigitalEvent"},{"@id":"_:t112191"}]},{"@id":"d3f:SystemConfigSystemCall","@type":"owl:Class","rdfs:hasSubClass":[{"@id":"d3f:GetSystemConfigValue"},{"@id":"d3f:SetSystemConfigValue"}],"rdfs:label":["System Config System Call"],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"}]},{"@id":"d3f:TerminateProcess","@type":["owl:NamedIndividual","owl:Class"],"d3f:definition":["On many computer operating systems, a computer process terminates its execution by making an exit system call. More generally, an exit in a multithreading environment means that a thread of execution has stopped running. For resource management, the operating system reclaims resources (memory, files, etc.) that were used by the process. The process is said to be a dead process after it terminates."],"d3f:terminates":[{"@id":"d3f:Process"}],"rdfs:isDefinedBy":[{"@id":"http://dbpedia.org/resource/Exit_(system_call)"}],"rdfs:label":["Terminate Process"],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t111378"}]},{"@id":"d3f:TraceProcess","@type":["owl:NamedIndividual","owl:Class"],"d3f:definition":["A trace system call provides a means by which one process (the \"tracer\") may observe and control the execution of another process (the \"tracee\"), and examine and change the tracee's memory and registers. It is primarily used to implement breakpoint debugging and system call tracing."],"d3f:monitors":[{"@id":"d3f:Process"}],"rdfs:label":["Trace Process"],"rdfs:seeAlso":[{"@id":"https://dbpedia.org/resource/Ptrace"},{"@id":"https://linux.die.net/man/2/ptrace"}],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t111574"}]},{"@id":"d3f:WriteFile","@type":["owl:NamedIndividual","owl:Class"],"d3f:definition":["The write is one of the most basic routines provided by a Unix-like operating system kernel. It writes data from a buffer declared by the user to a given device, such as a file. This is the primary way to output data from a program by directly using a system call. The destination is identified by a numeric code. The data to be written, for instance a piece of text, is defined by a pointer and a size, given in number of bytes. write thus takes three arguments."],"d3f:modifies":[{"@id":"d3f:File"}],"rdfs:isDefinedBy":[{"@id":"http://dbpedia.org/resource/Write_(system_call)"}],"rdfs:label":["Write File"],"rdfs:subClassOf":[{"@id":"d3f:SystemCall"},{"@id":"_:t111406"}]}]}